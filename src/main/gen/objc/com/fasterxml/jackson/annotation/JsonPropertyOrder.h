//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonPropertyOrder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonPropertyOrder")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonPropertyOrder
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonPropertyOrder 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonPropertyOrder 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonPropertyOrder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonPropertyOrder_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonPropertyOrder || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonPropertyOrder))
#define ComFasterxmlJacksonAnnotationJsonPropertyOrder_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief Annotation that can be used to define ordering (possibly partial) to use
  when serializing object properties.Properties included in annotation
  declaration will be serialized first (in defined order), followed by
  any properties not included in the definition.
 Annotation definition will override any implicit orderings (such as
  guarantee that Creator-properties are serialized before non-creator
  properties)
 <p>
  Examples:
 @code

   // ensure that "id" and "name" are output before other properties  
  &#64;JsonPropertyOrder({ "id", "name" })
   // order any properties that don't have explicit setting using alphabetic order  
  &#64;JsonPropertyOrder(alphabetic=true)
 
@endcode
 <p>
  This annotation may or may not have effect on deserialization: for basic JSON
  handling there is no effect, but for other supported data types (or structural
  conventions) there may be.
 <p>
  NOTE: annotation is allowed for properties, starting with 2.4, mostly to support
  alphabetic ordering of <code>java.util.Map</code> entries.
 */
@protocol ComFasterxmlJacksonAnnotationJsonPropertyOrder < JavaLangAnnotationAnnotation >

@property (readonly) IOSObjectArray *value;
@property (readonly) jboolean alphabetic;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonPropertyOrder : NSObject < ComFasterxmlJacksonAnnotationJsonPropertyOrder > {
 @public
  IOSObjectArray *value_;
  jboolean alphabetic_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonPropertyOrder)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonPropertyOrder> create_ComFasterxmlJacksonAnnotationJsonPropertyOrder(jboolean alphabetic, IOSObjectArray *value);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonPropertyOrder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonPropertyOrder")
