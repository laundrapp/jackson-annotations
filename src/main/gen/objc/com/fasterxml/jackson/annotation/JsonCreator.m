//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonCreator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JacksonAnnotation.h"
#include "com/fasterxml/jackson/annotation/JsonCreator.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonAnnotationJsonCreator__Annotations$0(void);

__attribute__((unused)) static void ComFasterxmlJacksonAnnotationJsonCreator_Mode_initWithNSString_withInt_(ComFasterxmlJacksonAnnotationJsonCreator_Mode *self, NSString *__name, jint __ordinal);

@implementation ComFasterxmlJacksonAnnotationJsonCreator

@synthesize mode = mode_;

+ (ComFasterxmlJacksonAnnotationJsonCreator_Mode *)modeDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonCreator_Mode, DEFAULT);
}

- (IOSClass *)annotationType {
  return ComFasterxmlJacksonAnnotationJsonCreator_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@com.fasterxml.jackson.annotation.JsonCreator(mode=%@)", mode_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

- (void)dealloc {
  RELEASE_(mode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(mode);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "mode_", "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", (void *)&ComFasterxmlJacksonAnnotationJsonCreator__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonCreator = { "JsonCreator", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x2609, 1, 1, -1, 0, -1, -1, 1 };
  return &_ComFasterxmlJacksonAnnotationJsonCreator;
}

@end

id<ComFasterxmlJacksonAnnotationJsonCreator> create_ComFasterxmlJacksonAnnotationJsonCreator(ComFasterxmlJacksonAnnotationJsonCreator_Mode *mode) {
  ComFasterxmlJacksonAnnotationJsonCreator *self = AUTORELEASE([[ComFasterxmlJacksonAnnotationJsonCreator alloc] init]);
  self->mode_ = RETAIN_(mode);
  return self;
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonCreator__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE), JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, CONSTRUCTOR) } count:3 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_ComFasterxmlJacksonAnnotationJacksonAnnotation() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonCreator)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonAnnotationJsonCreator_Mode)

ComFasterxmlJacksonAnnotationJsonCreator_Mode *ComFasterxmlJacksonAnnotationJsonCreator_Mode_values_[4];

@implementation ComFasterxmlJacksonAnnotationJsonCreator_Mode

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonAnnotationJsonCreator_Mode_values();
}

+ (ComFasterxmlJacksonAnnotationJsonCreator_Mode *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonAnnotationJsonCreator_Mode_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComFasterxmlJacksonAnnotationJsonCreator_Mode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT", "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "DELEGATING", "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "PROPERTIES", "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "DISABLED", "LComFasterxmlJacksonAnnotationJsonCreator_Mode;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonAnnotationJsonCreator_Mode, DEFAULT), &JreEnum(ComFasterxmlJacksonAnnotationJsonCreator_Mode, DELEGATING), &JreEnum(ComFasterxmlJacksonAnnotationJsonCreator_Mode, PROPERTIES), &JreEnum(ComFasterxmlJacksonAnnotationJsonCreator_Mode, DISABLED), "LComFasterxmlJacksonAnnotationJsonCreator;", "Ljava/lang/Enum<Lcom/fasterxml/jackson/annotation/JsonCreator$Mode;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonCreator_Mode = { "Mode", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x4019, 2, 4, 6, -1, -1, 7, -1 };
  return &_ComFasterxmlJacksonAnnotationJsonCreator_Mode;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonAnnotationJsonCreator_Mode class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 4 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 4; i++) {
      ((void)(ComFasterxmlJacksonAnnotationJsonCreator_Mode_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComFasterxmlJacksonAnnotationJsonCreator_Mode_initWithNSString_withInt_(e, JreEnumConstantName(ComFasterxmlJacksonAnnotationJsonCreator_Mode_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonAnnotationJsonCreator_Mode)
  }
}

@end

void ComFasterxmlJacksonAnnotationJsonCreator_Mode_initWithNSString_withInt_(ComFasterxmlJacksonAnnotationJsonCreator_Mode *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonCreator_Mode_values() {
  ComFasterxmlJacksonAnnotationJsonCreator_Mode_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonAnnotationJsonCreator_Mode_values_ count:4 type:ComFasterxmlJacksonAnnotationJsonCreator_Mode_class_()];
}

ComFasterxmlJacksonAnnotationJsonCreator_Mode *ComFasterxmlJacksonAnnotationJsonCreator_Mode_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonAnnotationJsonCreator_Mode_initialize();
  for (int i = 0; i < 4; i++) {
    ComFasterxmlJacksonAnnotationJsonCreator_Mode *e = ComFasterxmlJacksonAnnotationJsonCreator_Mode_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonAnnotationJsonCreator_Mode *ComFasterxmlJacksonAnnotationJsonCreator_Mode_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonAnnotationJsonCreator_Mode_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return ComFasterxmlJacksonAnnotationJsonCreator_Mode_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonCreator_Mode)
