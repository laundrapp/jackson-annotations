//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonBackReference.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonBackReference")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonBackReference
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonBackReference 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonBackReference 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonBackReference

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonBackReference_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonBackReference || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonBackReference))
#define ComFasterxmlJacksonAnnotationJsonBackReference_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Annotation used to indicate that associated property is part of
  two-way linkage between fields; and that its role is "child" (or "back") link.
 Value type of the property must be a bean: it can not be a Collection, Map,
  Array or enumeration.
  Linkage is handled such that the property
  annotated with this annotation is not serialized; and during deserialization,
  its value is set to instance that has the "managed" (forward) link.
 <p>
  All references have logical name to allow handling multiple linkages; typical case
  would be that where nodes have both parent/child and sibling linkages. If so,
  pairs of references should be named differently.
  It is an error for a class to have multiple back references with same name,
  even if types pointed are different.
 <p>
  Note: only methods and fields can be annotated with this annotation: constructor
  arguments should NOT be annotated, as they can not be either managed or back
  references.
 */
@protocol ComFasterxmlJacksonAnnotationJsonBackReference < JavaLangAnnotationAnnotation >

@property (readonly) NSString *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonBackReference : NSObject < ComFasterxmlJacksonAnnotationJsonBackReference > {
 @public
  NSString *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonBackReference)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonBackReference> create_ComFasterxmlJacksonAnnotationJsonBackReference(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonBackReference)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonBackReference")
