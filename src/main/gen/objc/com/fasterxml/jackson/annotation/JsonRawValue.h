//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonRawValue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonRawValue")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonRawValue
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonRawValue 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonRawValue 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonRawValue

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonRawValue_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonRawValue || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonRawValue))
#define ComFasterxmlJacksonAnnotationJsonRawValue_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Marker annotation that indicates that the annotated method
  or field should be serialized by including literal String value
  of the property as is, without quoting of characters.
 This can be useful for injecting values already serialized in JSON or 
  passing javascript function definitions from server to a javascript client.
 <p>
  Warning: the resulting JSON stream may be invalid depending on your input value.
 */
@protocol ComFasterxmlJacksonAnnotationJsonRawValue < JavaLangAnnotationAnnotation >

@property (readonly) jboolean value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonRawValue : NSObject < ComFasterxmlJacksonAnnotationJsonRawValue > {
 @public
  jboolean value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonRawValue)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonRawValue> create_ComFasterxmlJacksonAnnotationJsonRawValue(jboolean value);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonRawValue)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonRawValue")
