//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonIdentityInfo.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JacksonAnnotation.h"
#include "com/fasterxml/jackson/annotation/JsonIdentityInfo.h"
#include "com/fasterxml/jackson/annotation/SimpleObjectIdResolver.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonAnnotationJsonIdentityInfo__Annotations$0(void);

@implementation ComFasterxmlJacksonAnnotationJsonIdentityInfo

@synthesize property = property_;
@synthesize generator = generator_;
@synthesize resolver = resolver_;
@synthesize scope = scope_;

+ (NSString *)propertyDefault {
  return @"@id";
}

+ (IOSClass *)resolverDefault {
  return ComFasterxmlJacksonAnnotationSimpleObjectIdResolver_class_();
}

+ (IOSClass *)scopeDefault {
  return NSObject_class_();
}

- (IOSClass *)annotationType {
  return ComFasterxmlJacksonAnnotationJsonIdentityInfo_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@com.fasterxml.jackson.annotation.JsonIdentityInfo(property=%@, generator=%@, resolver=%@, scope=%@)", property_, generator_, resolver_, scope_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

- (void)dealloc {
  RELEASE_(property_);
  RELEASE_(generator_);
  RELEASE_(resolver_);
  RELEASE_(scope_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(property);
  methods[1].selector = @selector(generator);
  methods[2].selector = @selector(resolver);
  methods[3].selector = @selector(scope);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "property_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "generator_", "LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
    { "resolver_", "LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 1, -1 },
    { "scope_", "LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 2, -1 },
  };
  static const void *ptrTable[] = { "Ljava/lang/Class<+Lcom/fasterxml/jackson/annotation/ObjectIdGenerator<*>;>;", "Ljava/lang/Class<+Lcom/fasterxml/jackson/annotation/ObjectIdResolver;>;", "Ljava/lang/Class<*>;", (void *)&ComFasterxmlJacksonAnnotationJsonIdentityInfo__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonIdentityInfo = { "JsonIdentityInfo", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x2609, 4, 4, -1, -1, -1, -1, 3 };
  return &_ComFasterxmlJacksonAnnotationJsonIdentityInfo;
}

@end

id<ComFasterxmlJacksonAnnotationJsonIdentityInfo> create_ComFasterxmlJacksonAnnotationJsonIdentityInfo(IOSClass *generator, NSString *property, IOSClass *resolver, IOSClass *scope) {
  ComFasterxmlJacksonAnnotationJsonIdentityInfo *self = AUTORELEASE([[ComFasterxmlJacksonAnnotationJsonIdentityInfo alloc] init]);
  self->generator_ = RETAIN_(generator);
  self->property_ = RETAIN_(property);
  self->resolver_ = RETAIN_(resolver);
  self->scope_ = RETAIN_(scope);
  return self;
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonIdentityInfo__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE), JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER) } count:5 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_ComFasterxmlJacksonAnnotationJacksonAnnotation() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonIdentityInfo)
