//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/Nulls.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationNulls")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationNulls
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationNulls 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationNulls 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationNulls

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationNulls_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationNulls || defined(INCLUDE_ComFasterxmlJacksonAnnotationNulls))
#define ComFasterxmlJacksonAnnotationNulls_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComFasterxmlJacksonAnnotationNulls_Enum) {
  ComFasterxmlJacksonAnnotationNulls_Enum_SET = 0,
  ComFasterxmlJacksonAnnotationNulls_Enum_SKIP = 1,
  ComFasterxmlJacksonAnnotationNulls_Enum_FAIL = 2,
  ComFasterxmlJacksonAnnotationNulls_Enum_AS_EMPTY = 3,
  ComFasterxmlJacksonAnnotationNulls_Enum_DEFAULT = 4,
};

/*!
 @brief Enumeration used with <code>JsonSetter</code> (for properties `nulls`
  and `contentNulls`)
  to define how explicit `null` values from input (if input format
  has the concept; JSON, for example does) are handled.
 */
@interface ComFasterxmlJacksonAnnotationNulls : JavaLangEnum

#pragma mark Public

+ (ComFasterxmlJacksonAnnotationNulls *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationNulls)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_values_[];

/*!
 @brief Value that indicates that an input null should result in assignment
  of Java `null` value of matching property (except where deserializer
  indicates other "null value" by overriding <code>getNullValue(...)
 </code>
  method)
 */
inline ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_get_SET(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationNulls, SET)

/*!
 @brief Value that indicates that an input null value should be skipped and
  no assignment is to be made; this usually means that the property
  will have its default value.
 */
inline ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_get_SKIP(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationNulls, SKIP)

/*!
 @brief Value that indicates that an exception (of type that indicates input mismatch
  problem) is to be thrown, to indicate that null values are not accepted.
 */
inline ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_get_FAIL(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationNulls, FAIL)

/*!
 @brief Value that indicates that value to assign should come from the value
  deserializer of the type, using method <code>getEmptyValue()</code>.
 */
inline ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_get_AS_EMPTY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationNulls, AS_EMPTY)

/*!
 @brief Pseudo-value used to indicate that defaults are to be used for handling,
  that is, this value specifies no explicit handling override.
 */
inline ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_get_DEFAULT(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationNulls, DEFAULT)

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonAnnotationNulls_values(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationNulls *ComFasterxmlJacksonAnnotationNulls_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationNulls)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationNulls")
