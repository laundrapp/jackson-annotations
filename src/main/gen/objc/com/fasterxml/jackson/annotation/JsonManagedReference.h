//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonManagedReference.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonManagedReference")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonManagedReference
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonManagedReference 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonManagedReference 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonManagedReference

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonManagedReference_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonManagedReference || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonManagedReference))
#define ComFasterxmlJacksonAnnotationJsonManagedReference_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Annotation used to indicate that annotated property is part of
  two-way linkage between fields; and that its role is "parent" (or "forward") link.
 Value type (class) of property must have a single compatible property annotated with 
 <code>JsonBackReference</code>. Linkage is handled such that the property
  annotated with this annotation is handled normally (serialized normally, no
  special handling for deserialization); it is the matching back reference
  that requires special handling
 <p>
  All references have logical name to allow handling multiple linkages; typical case
  would be that where nodes have both parent/child and sibling linkages. If so,
  pairs of references should be named differently.
  It is an error for a class too have multiple managed references with same name,
  even if types pointed are different.
 <p>
  Note: only methods and fields can be annotated with this annotation: constructor
  arguments should NOT be annotated, as they can not be either managed or back
  references.
 @author tatu
 */
@protocol ComFasterxmlJacksonAnnotationJsonManagedReference < JavaLangAnnotationAnnotation >

@property (readonly) NSString *value;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonManagedReference : NSObject < ComFasterxmlJacksonAnnotationJsonManagedReference > {
 @public
  NSString *value_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonManagedReference)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonManagedReference> create_ComFasterxmlJacksonAnnotationJsonManagedReference(NSString *value);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonManagedReference)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonManagedReference")
