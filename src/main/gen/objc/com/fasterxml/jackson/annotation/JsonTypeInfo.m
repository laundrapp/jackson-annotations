//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonTypeInfo.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JacksonAnnotation.h"
#include "com/fasterxml/jackson/annotation/JsonTypeInfo.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo__Annotations$0(void);

@interface ComFasterxmlJacksonAnnotationJsonTypeInfo_Id () {
 @public
  NSString *_defaultPropertyName_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, _defaultPropertyName_, NSString *)

__attribute__((unused)) static void ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initWithNSString_withNSString_withInt_(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *self, NSString *defProp, NSString *__name, jint __ordinal);

__attribute__((unused)) static void ComFasterxmlJacksonAnnotationJsonTypeInfo_As_initWithNSString_withInt_(ComFasterxmlJacksonAnnotationJsonTypeInfo_As *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo_None__Annotations$0(void);

@implementation ComFasterxmlJacksonAnnotationJsonTypeInfo

@synthesize use = use_;
@synthesize include = include_;
@synthesize property = property_;
@synthesize defaultImpl = defaultImpl_;
@synthesize visible = visible_;

+ (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)includeDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, PROPERTY);
}

+ (NSString *)propertyDefault {
  return @"";
}

+ (IOSClass *)defaultImplDefault {
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_class_();
}

+ (jboolean)visibleDefault {
  return false;
}

- (IOSClass *)annotationType {
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@com.fasterxml.jackson.annotation.JsonTypeInfo(use=%@, include=%@, property=%@, defaultImpl=%@, visible=%d)", use_, include_, property_, defaultImpl_, visible_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

- (void)dealloc {
  RELEASE_(use_);
  RELEASE_(include_);
  RELEASE_(property_);
  RELEASE_(defaultImpl_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(use);
  methods[1].selector = @selector(include);
  methods[2].selector = @selector(property);
  methods[3].selector = @selector(defaultImpl);
  methods[4].selector = @selector(visible);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "use_", "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "include_", "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "property_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "defaultImpl_", "LIOSClass;", .constantValue.asLong = 0, 0x1000, -1, -1, 0, -1 },
    { "visible_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Ljava/lang/Class<*>;", "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;LComFasterxmlJacksonAnnotationJsonTypeInfo_As;LComFasterxmlJacksonAnnotationJsonTypeInfo_None;", (void *)&ComFasterxmlJacksonAnnotationJsonTypeInfo__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonTypeInfo = { "JsonTypeInfo", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x2609, 5, 5, -1, 1, -1, -1, 2 };
  return &_ComFasterxmlJacksonAnnotationJsonTypeInfo;
}

@end

id<ComFasterxmlJacksonAnnotationJsonTypeInfo> create_ComFasterxmlJacksonAnnotationJsonTypeInfo(IOSClass *defaultImpl, ComFasterxmlJacksonAnnotationJsonTypeInfo_As *include, NSString *property, ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *use, jboolean visible) {
  ComFasterxmlJacksonAnnotationJsonTypeInfo *self = AUTORELEASE([[ComFasterxmlJacksonAnnotationJsonTypeInfo alloc] init]);
  self->defaultImpl_ = RETAIN_(defaultImpl);
  self->include_ = RETAIN_(include);
  self->property_ = RETAIN_(property);
  self->use_ = RETAIN_(use);
  self->visible_ = visible;
  return self;
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE), JreLoadEnum(JavaLangAnnotationElementType, TYPE), JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER) } count:5 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_ComFasterxmlJacksonAnnotationJacksonAnnotation() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonTypeInfo)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id)

ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values_[5];

@implementation ComFasterxmlJacksonAnnotationJsonTypeInfo_Id

- (NSString *)getDefaultPropertyName {
  return _defaultPropertyName_;
}

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values();
}

+ (ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(getDefaultPropertyName);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "NONE", "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "CLASS", "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "MINIMAL_CLASS", "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "NAME", "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "CUSTOM", "LComFasterxmlJacksonAnnotationJsonTypeInfo_Id;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "_defaultPropertyName_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, NONE), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, CLASS), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, MINIMAL_CLASS), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, NAME), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, CUSTOM), "LComFasterxmlJacksonAnnotationJsonTypeInfo;", "Ljava/lang/Enum<Lcom/fasterxml/jackson/annotation/JsonTypeInfo$Id;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonTypeInfo_Id = { "Id", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x4019, 3, 6, 7, -1, -1, 8, -1 };
  return &_ComFasterxmlJacksonAnnotationJsonTypeInfo_Id;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonAnnotationJsonTypeInfo_Id class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, NONE) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initWithNSString_withNSString_withInt_(e, nil, @"NONE", 0);
    ((void) (JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, CLASS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initWithNSString_withNSString_withInt_(e, @"@class", @"CLASS", 1);
    ((void) (JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, MINIMAL_CLASS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initWithNSString_withNSString_withInt_(e, @"@c", @"MINIMAL_CLASS", 2);
    ((void) (JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, NAME) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initWithNSString_withNSString_withInt_(e, @"@type", @"NAME", 3);
    ((void) (JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id, CUSTOM) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initWithNSString_withNSString_withInt_(e, nil, @"CUSTOM", 4);
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id)
  }
}

@end

void ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initWithNSString_withNSString_withInt_(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *self, NSString *defProp, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->_defaultPropertyName_, defProp);
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values() {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values_ count:5 type:ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_class_()];
}

ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initialize();
  for (int i = 0; i < 5; i++) {
    ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *e = ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_Id_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonTypeInfo_Id)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonAnnotationJsonTypeInfo_As)

ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values_[5];

@implementation ComFasterxmlJacksonAnnotationJsonTypeInfo_As

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values();
}

+ (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_As_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "PROPERTY", "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "WRAPPER_OBJECT", "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "WRAPPER_ARRAY", "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "EXTERNAL_PROPERTY", "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "EXISTING_PROPERTY", "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, PROPERTY), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, WRAPPER_OBJECT), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, WRAPPER_ARRAY), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, EXTERNAL_PROPERTY), &JreEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, EXISTING_PROPERTY), "LComFasterxmlJacksonAnnotationJsonTypeInfo;", "Ljava/lang/Enum<Lcom/fasterxml/jackson/annotation/JsonTypeInfo$As;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonTypeInfo_As = { "As", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x4019, 2, 5, 7, -1, -1, 8, -1 };
  return &_ComFasterxmlJacksonAnnotationJsonTypeInfo_As;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonAnnotationJsonTypeInfo_As class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 5; i++) {
      ((void)(ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComFasterxmlJacksonAnnotationJsonTypeInfo_As_initWithNSString_withInt_(e, JreEnumConstantName(ComFasterxmlJacksonAnnotationJsonTypeInfo_As_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonAnnotationJsonTypeInfo_As)
  }
}

@end

void ComFasterxmlJacksonAnnotationJsonTypeInfo_As_initWithNSString_withInt_(ComFasterxmlJacksonAnnotationJsonTypeInfo_As *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values() {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values_ count:5 type:ComFasterxmlJacksonAnnotationJsonTypeInfo_As_class_()];
}

ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_initialize();
  for (int i = 0; i < 5; i++) {
    ComFasterxmlJacksonAnnotationJsonTypeInfo_As *e = ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonAnnotationJsonTypeInfo_As *ComFasterxmlJacksonAnnotationJsonTypeInfo_As_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return ComFasterxmlJacksonAnnotationJsonTypeInfo_As_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonTypeInfo_As)

@implementation ComFasterxmlJacksonAnnotationJsonTypeInfo_None

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonAnnotationJsonTypeInfo_None_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonAnnotationJsonTypeInfo;", (void *)&ComFasterxmlJacksonAnnotationJsonTypeInfo_None__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJsonTypeInfo_None = { "None", "com.fasterxml.jackson.annotation", ptrTable, methods, NULL, 7, 0x409, 1, 0, 0, -1, -1, -1, 1 };
  return &_ComFasterxmlJacksonAnnotationJsonTypeInfo_None;
}

@end

void ComFasterxmlJacksonAnnotationJsonTypeInfo_None_init(ComFasterxmlJacksonAnnotationJsonTypeInfo_None *self) {
  NSObject_init(self);
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJsonTypeInfo_None__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJsonTypeInfo_None)
