//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonTypeId.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeId")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonTypeId
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeId 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeId 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonTypeId

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonTypeId_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeId || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonTypeId))
#define ComFasterxmlJacksonAnnotationJsonTypeId_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Marker annotation that can be used on a property accessor
  (field, getter or setter, constructor parameter) to indicate that
  the property is to contain type id to use when including
  polymorphic type information.
 Annotation should <b>only be used</b> if the intent is to override
  generation of standard type id: if so, value of the property will be
  accessed during serialization and used as the type id.
 <p>
  On deserialization annotation has no effect, as visibility of type id
  is governed by value of <code>JsonTypeInfo.visible</code>; properties with
  this annotation get no special handling.
 <p>
  On serialization, this annotation will exclude property from being
  serialized along other properties; instead, its value is serialized
  as the type identifier. Since type identifier may be included in
  various places, it may still appear like 'normal' property (when using 
 <code>JsonTypeInfo.As</code>), but is more commonly embedded
  in a different place, as per inclusion rules (see <code>JsonTypeInfo</code>
  for details).
 @since 2.0
 */
@protocol ComFasterxmlJacksonAnnotationJsonTypeId < JavaLangAnnotationAnnotation >

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonTypeId : NSObject < ComFasterxmlJacksonAnnotationJsonTypeId >

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonTypeId)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonTypeId> create_ComFasterxmlJacksonAnnotationJsonTypeId(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonTypeId)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonTypeId")
