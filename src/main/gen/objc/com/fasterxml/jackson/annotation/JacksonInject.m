//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JacksonInject.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JacksonAnnotation.h"
#include "com/fasterxml/jackson/annotation/JacksonInject.h"
#include "com/fasterxml/jackson/annotation/OptBoolean.h"
#include "java/lang/Boolean.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonAnnotationJacksonInject__Annotations$0(void);

@interface ComFasterxmlJacksonAnnotationJacksonInject_Value ()

+ (jboolean)_emptyWithId:(id)id_
     withJavaLangBoolean:(JavaLangBoolean *)useInput;

@end

inline jlong ComFasterxmlJacksonAnnotationJacksonInject_Value_get_serialVersionUID(void);
#define ComFasterxmlJacksonAnnotationJacksonInject_Value_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonAnnotationJacksonInject_Value, serialVersionUID, jlong)

__attribute__((unused)) static jboolean ComFasterxmlJacksonAnnotationJacksonInject_Value__emptyWithId_withJavaLangBoolean_(id id_, JavaLangBoolean *useInput);

@implementation ComFasterxmlJacksonAnnotationJacksonInject

@synthesize value = value_;
@synthesize useInput = useInput_;

+ (NSString *)valueDefault {
  return @"";
}

+ (ComFasterxmlJacksonAnnotationOptBoolean *)useInputDefault {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationOptBoolean, DEFAULT);
}

- (IOSClass *)annotationType {
  return ComFasterxmlJacksonAnnotationJacksonInject_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@com.fasterxml.jackson.annotation.JacksonInject(value=%@, useInput=%@)", value_, useInput_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

- (void)dealloc {
  RELEASE_(value_);
  RELEASE_(useInput_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationOptBoolean;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(value);
  methods[1].selector = @selector(useInput);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSString;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "useInput_", "LComFasterxmlJacksonAnnotationOptBoolean;", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonAnnotationJacksonInject_Value;", (void *)&ComFasterxmlJacksonAnnotationJacksonInject__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJacksonInject = { "JacksonInject", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x2609, 2, 2, -1, 0, -1, -1, 1 };
  return &_ComFasterxmlJacksonAnnotationJacksonInject;
}

@end

id<ComFasterxmlJacksonAnnotationJacksonInject> create_ComFasterxmlJacksonAnnotationJacksonInject(ComFasterxmlJacksonAnnotationOptBoolean *useInput, NSString *value) {
  ComFasterxmlJacksonAnnotationJacksonInject *self = AUTORELEASE([[ComFasterxmlJacksonAnnotationJacksonInject alloc] init]);
  self->useInput_ = RETAIN_(useInput);
  self->value_ = RETAIN_(value);
  return self;
}

IOSObjectArray *ComFasterxmlJacksonAnnotationJacksonInject__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangAnnotationTarget([IOSObjectArray arrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, ANNOTATION_TYPE), JreLoadEnum(JavaLangAnnotationElementType, METHOD), JreLoadEnum(JavaLangAnnotationElementType, FIELD), JreLoadEnum(JavaLangAnnotationElementType, PARAMETER) } count:4 type:JavaLangAnnotationElementType_class_()]), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_ComFasterxmlJacksonAnnotationJacksonAnnotation() } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJacksonInject)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonAnnotationJacksonInject_Value)

ComFasterxmlJacksonAnnotationJacksonInject_Value *ComFasterxmlJacksonAnnotationJacksonInject_Value_EMPTY;

@implementation ComFasterxmlJacksonAnnotationJacksonInject_Value

- (instancetype __nonnull)initWithId:(id)id_
                 withJavaLangBoolean:(JavaLangBoolean *)useInput {
  ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(self, id_, useInput);
  return self;
}

- (IOSClass *)valueFor {
  return ComFasterxmlJacksonAnnotationJacksonInject_class_();
}

+ (ComFasterxmlJacksonAnnotationJacksonInject_Value *)empty {
  return ComFasterxmlJacksonAnnotationJacksonInject_Value_empty();
}

+ (ComFasterxmlJacksonAnnotationJacksonInject_Value *)constructWithId:(id)id_
                                                  withJavaLangBoolean:(JavaLangBoolean *)useInput {
  return ComFasterxmlJacksonAnnotationJacksonInject_Value_constructWithId_withJavaLangBoolean_(id_, useInput);
}

+ (ComFasterxmlJacksonAnnotationJacksonInject_Value *)fromWithComFasterxmlJacksonAnnotationJacksonInject:(id<ComFasterxmlJacksonAnnotationJacksonInject>)src {
  return ComFasterxmlJacksonAnnotationJacksonInject_Value_fromWithComFasterxmlJacksonAnnotationJacksonInject_(src);
}

+ (ComFasterxmlJacksonAnnotationJacksonInject_Value *)forIdWithId:(id)id_ {
  return ComFasterxmlJacksonAnnotationJacksonInject_Value_forIdWithId_(id_);
}

- (ComFasterxmlJacksonAnnotationJacksonInject_Value *)withIdWithId:(id)id_ {
  if (id_ == nil) {
    if (_id_ == nil) {
      return self;
    }
  }
  else if ([id_ isEqual:_id_]) {
    return self;
  }
  return create_ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(id_, _useInput_);
}

- (ComFasterxmlJacksonAnnotationJacksonInject_Value *)withUseInputWithJavaLangBoolean:(JavaLangBoolean *)useInput {
  if (useInput == nil) {
    if (_useInput_ == nil) {
      return self;
    }
  }
  else if ([useInput isEqual:_useInput_]) {
    return self;
  }
  return create_ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(_id_, useInput);
}

- (id)getId {
  return _id_;
}

- (JavaLangBoolean *)getUseInput {
  return _useInput_;
}

- (jboolean)hasId {
  return _id_ != nil;
}

- (jboolean)willUseInputWithBoolean:(jboolean)defaultSetting {
  return (_useInput_ == nil) ? defaultSetting : [((JavaLangBoolean *) nil_chk(_useInput_)) booleanValue];
}

- (NSString *)description {
  return NSString_java_formatWithNSString_withNSObjectArray_(@"JacksonInject.Value(id=%s,useInput=%s)", [IOSObjectArray arrayWithObjects:(id[]){ _id_, _useInput_ } count:2 type:NSObject_class_()]);
}

- (NSUInteger)hash {
  jint h = 1;
  if (_id_ != nil) {
    h += ((jint) [_id_ hash]);
  }
  if (_useInput_ != nil) {
    h += ((jint) [_useInput_ hash]);
  }
  return h;
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if ([o java_getClass] == [self java_getClass]) {
    ComFasterxmlJacksonAnnotationJacksonInject_Value *other = (ComFasterxmlJacksonAnnotationJacksonInject_Value *) cast_chk(o, [ComFasterxmlJacksonAnnotationJacksonInject_Value class]);
    if (ComFasterxmlJacksonAnnotationOptBoolean_equalsWithJavaLangBoolean_withJavaLangBoolean_(_useInput_, other->_useInput_)) {
      if (_id_ == nil) {
        return other->_id_ == nil;
      }
      return [_id_ isEqual:other->_id_];
    }
  }
  return false;
}

+ (jboolean)_emptyWithId:(id)id_
     withJavaLangBoolean:(JavaLangBoolean *)useInput {
  return ComFasterxmlJacksonAnnotationJacksonInject_Value__emptyWithId_withJavaLangBoolean_(id_, useInput);
}

- (void)dealloc {
  RELEASE_(_id_);
  RELEASE_(_useInput_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJacksonInject_Value;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJacksonInject_Value;", 0x9, 2, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJacksonInject_Value;", 0x9, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJacksonInject_Value;", 0x9, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJacksonInject_Value;", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJacksonInject_Value;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 13, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 14, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 15, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withJavaLangBoolean:);
  methods[1].selector = @selector(valueFor);
  methods[2].selector = @selector(empty);
  methods[3].selector = @selector(constructWithId:withJavaLangBoolean:);
  methods[4].selector = @selector(fromWithComFasterxmlJacksonAnnotationJacksonInject:);
  methods[5].selector = @selector(forIdWithId:);
  methods[6].selector = @selector(withIdWithId:);
  methods[7].selector = @selector(withUseInputWithJavaLangBoolean:);
  methods[8].selector = @selector(getId);
  methods[9].selector = @selector(getUseInput);
  methods[10].selector = @selector(hasId);
  methods[11].selector = @selector(willUseInputWithBoolean:);
  methods[12].selector = @selector(description);
  methods[13].selector = @selector(hash);
  methods[14].selector = @selector(isEqual:);
  methods[15].selector = @selector(_emptyWithId:withJavaLangBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonAnnotationJacksonInject_Value_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "EMPTY", "LComFasterxmlJacksonAnnotationJacksonInject_Value;", .constantValue.asLong = 0, 0x1c, -1, 16, -1, -1 },
    { "_id_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_useInput_", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LJavaLangBoolean;", "()Ljava/lang/Class<Lcom/fasterxml/jackson/annotation/JacksonInject;>;", "construct", "from", "LComFasterxmlJacksonAnnotationJacksonInject;", "forId", "LNSObject;", "withId", "withUseInput", "LJavaLangBoolean;", "willUseInput", "Z", "toString", "hashCode", "equals", "_empty", &ComFasterxmlJacksonAnnotationJacksonInject_Value_EMPTY, "Ljava/lang/Object;Lcom/fasterxml/jackson/annotation/JacksonAnnotationValue<Lcom/fasterxml/jackson/annotation/JacksonInject;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonAnnotationJacksonInject_Value = { "Value", "com.fasterxml.jackson.annotation", ptrTable, methods, fields, 7, 0x9, 16, 4, 4, -1, -1, 17, -1 };
  return &_ComFasterxmlJacksonAnnotationJacksonInject_Value;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonAnnotationJacksonInject_Value class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonAnnotationJacksonInject_Value_EMPTY, new_ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(nil, nil));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonAnnotationJacksonInject_Value)
  }
}

@end

void ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(ComFasterxmlJacksonAnnotationJacksonInject_Value *self, id id_, JavaLangBoolean *useInput) {
  NSObject_init(self);
  JreStrongAssign(&self->_id_, id_);
  JreStrongAssign(&self->_useInput_, useInput);
}

ComFasterxmlJacksonAnnotationJacksonInject_Value *new_ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(id id_, JavaLangBoolean *useInput) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonAnnotationJacksonInject_Value, initWithId_withJavaLangBoolean_, id_, useInput)
}

ComFasterxmlJacksonAnnotationJacksonInject_Value *create_ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(id id_, JavaLangBoolean *useInput) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonAnnotationJacksonInject_Value, initWithId_withJavaLangBoolean_, id_, useInput)
}

ComFasterxmlJacksonAnnotationJacksonInject_Value *ComFasterxmlJacksonAnnotationJacksonInject_Value_empty() {
  ComFasterxmlJacksonAnnotationJacksonInject_Value_initialize();
  return ComFasterxmlJacksonAnnotationJacksonInject_Value_EMPTY;
}

ComFasterxmlJacksonAnnotationJacksonInject_Value *ComFasterxmlJacksonAnnotationJacksonInject_Value_constructWithId_withJavaLangBoolean_(id id_, JavaLangBoolean *useInput) {
  ComFasterxmlJacksonAnnotationJacksonInject_Value_initialize();
  if ([@"" isEqual:id_]) {
    id_ = nil;
  }
  if (ComFasterxmlJacksonAnnotationJacksonInject_Value__emptyWithId_withJavaLangBoolean_(id_, useInput)) {
    return ComFasterxmlJacksonAnnotationJacksonInject_Value_EMPTY;
  }
  return create_ComFasterxmlJacksonAnnotationJacksonInject_Value_initWithId_withJavaLangBoolean_(id_, useInput);
}

ComFasterxmlJacksonAnnotationJacksonInject_Value *ComFasterxmlJacksonAnnotationJacksonInject_Value_fromWithComFasterxmlJacksonAnnotationJacksonInject_(id<ComFasterxmlJacksonAnnotationJacksonInject> src) {
  ComFasterxmlJacksonAnnotationJacksonInject_Value_initialize();
  if (src == nil) {
    return ComFasterxmlJacksonAnnotationJacksonInject_Value_EMPTY;
  }
  return ComFasterxmlJacksonAnnotationJacksonInject_Value_constructWithId_withJavaLangBoolean_([src value], [((ComFasterxmlJacksonAnnotationOptBoolean *) nil_chk([src useInput])) asBoolean]);
}

ComFasterxmlJacksonAnnotationJacksonInject_Value *ComFasterxmlJacksonAnnotationJacksonInject_Value_forIdWithId_(id id_) {
  ComFasterxmlJacksonAnnotationJacksonInject_Value_initialize();
  return ComFasterxmlJacksonAnnotationJacksonInject_Value_constructWithId_withJavaLangBoolean_(id_, nil);
}

jboolean ComFasterxmlJacksonAnnotationJacksonInject_Value__emptyWithId_withJavaLangBoolean_(id id_, JavaLangBoolean *useInput) {
  ComFasterxmlJacksonAnnotationJacksonInject_Value_initialize();
  return (id_ == nil) && (useInput == nil);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonAnnotationJacksonInject_Value)
