//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/PropertyAccessor.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationPropertyAccessor")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationPropertyAccessor
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationPropertyAccessor 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationPropertyAccessor 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationPropertyAccessor

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationPropertyAccessor_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationPropertyAccessor || defined(INCLUDE_ComFasterxmlJacksonAnnotationPropertyAccessor))
#define ComFasterxmlJacksonAnnotationPropertyAccessor_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;

typedef NS_ENUM(NSUInteger, ComFasterxmlJacksonAnnotationPropertyAccessor_Enum) {
  ComFasterxmlJacksonAnnotationPropertyAccessor_Enum_GETTER = 0,
  ComFasterxmlJacksonAnnotationPropertyAccessor_Enum_SETTER = 1,
  ComFasterxmlJacksonAnnotationPropertyAccessor_Enum_CREATOR = 2,
  ComFasterxmlJacksonAnnotationPropertyAccessor_Enum_FIELD = 3,
  ComFasterxmlJacksonAnnotationPropertyAccessor_Enum_IS_GETTER = 4,
  ComFasterxmlJacksonAnnotationPropertyAccessor_Enum_NONE = 5,
  ComFasterxmlJacksonAnnotationPropertyAccessor_Enum_ALL = 6,
};

/*!
 @brief Enumeration used to define kinds of elements (called "property accessors")
  that annotations like <code>JsonAutoDetect</code> apply to.
 <p>
  In addition to method types (GETTER/IS_GETTER, SETTER, CREATOR) and the
  field type (FIELD), 2 pseudo-types
  are defined for convenience: <code>ALWAYS</code> and <code>NONE</code>. These
  can be used to indicate, all or none of available method types (respectively),
  for use by annotations that takes <code>JsonMethod</code> argument.
 */
@interface ComFasterxmlJacksonAnnotationPropertyAccessor : JavaLangEnum

#pragma mark Public

- (jboolean)creatorEnabled;

- (jboolean)fieldEnabled;

- (jboolean)getterEnabled;

- (jboolean)isGetterEnabled;

- (jboolean)setterEnabled;

+ (ComFasterxmlJacksonAnnotationPropertyAccessor *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationPropertyAccessor)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_values_[];

/*!
 @brief Getters are methods used to get a POJO field value for serialization,
  or, under certain conditions also for de-serialization.Latter
  can be used for effectively setting Collection or Map values
  in absence of setters, iff returned value is not a copy but
  actual value of the logical property.
 <p>
  Since version 1.3, this does <b>NOT</b> include "is getters" (methods
  that return boolean and named 'isXxx' for property 'xxx'); instead, 
 <code>IS_GETTER</code> is used}.
 */
inline ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_get_GETTER(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationPropertyAccessor, GETTER)

/*!
 @brief Setters are methods used to set a POJO value for deserialization.
 */
inline ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_get_SETTER(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationPropertyAccessor, SETTER)

/*!
 @brief Creators are constructors and (static) factory methods used to
  construct POJO instances for deserialization
 */
inline ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_get_CREATOR(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationPropertyAccessor, CREATOR)

/*!
 @brief Field refers to fields of regular Java objects.Although
  they are not really methods, addition of optional field-discovery
  in version 1.1 meant that there was need to enable/disable
  their auto-detection, and this is the place to add it in.
 */
inline ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_get_FIELD(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationPropertyAccessor, FIELD)

/*!
 @brief "Is getters" are getter-like methods that are named "isXxx"
  (instead of "getXxx" for getters) and return boolean value
  (either primitive, or <code>java.lang.Boolean</code>).
 */
inline ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_get_IS_GETTER(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationPropertyAccessor, IS_GETTER)

/*!
 @brief This pseudo-type indicates that none of accessors if affected.
 */
inline ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_get_NONE(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationPropertyAccessor, NONE)

/*!
 @brief This pseudo-type indicates that all accessors are affected.
 */
inline ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_get_ALL(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationPropertyAccessor, ALL)

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonAnnotationPropertyAccessor_values(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationPropertyAccessor *ComFasterxmlJacksonAnnotationPropertyAccessor_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationPropertyAccessor)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationPropertyAccessor")
