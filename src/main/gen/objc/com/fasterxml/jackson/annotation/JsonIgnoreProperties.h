//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonIgnoreProperties.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonIgnoreProperties")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonIgnoreProperties
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonIgnoreProperties 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonIgnoreProperties 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonIgnoreProperties

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonIgnoreProperties || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonIgnoreProperties))
#define ComFasterxmlJacksonAnnotationJsonIgnoreProperties_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief Annotation that can be used to either suppress serialization of
  properties (during serialization), or ignore processing of
  JSON properties read (during deserialization).
 <p>
  Example:
 @code

  // to prevent specified fields from being serialized or deserialized
  // (i.e. not include in JSON output; or being set even if they were included) 
  &#064;JsonIgnoreProperties({ "internalId", "secretKey" })
  // To ignore any unknown properties in JSON input without exception: 
  &#064;JsonIgnoreProperties(ignoreUnknown=true)
 
@endcode
 <p>
  Annotation can be applied both to classes and
  to properties. If used for both, actual set will be union of all
  ignorals: that is, you can only add properties to ignore, not remove
  or override. So you can not remove properties to ignore using
  per-property annotation.
 */
@protocol ComFasterxmlJacksonAnnotationJsonIgnoreProperties < JavaLangAnnotationAnnotation >

@property (readonly) IOSObjectArray *value;
@property (readonly) jboolean ignoreUnknown;
@property (readonly) jboolean allowGetters;
@property (readonly) jboolean allowSetters;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonIgnoreProperties : NSObject < ComFasterxmlJacksonAnnotationJsonIgnoreProperties > {
 @public
  IOSObjectArray *value_;
  jboolean ignoreUnknown_;
  jboolean allowGetters_;
  jboolean allowSetters_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonIgnoreProperties)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonIgnoreProperties> create_ComFasterxmlJacksonAnnotationJsonIgnoreProperties(jboolean allowGetters, jboolean allowSetters, jboolean ignoreUnknown, IOSObjectArray *value);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonIgnoreProperties)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonIgnoreProperties || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value))
#define ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_

#define RESTRICT_ComFasterxmlJacksonAnnotationJacksonAnnotationValue 1
#define INCLUDE_ComFasterxmlJacksonAnnotationJacksonAnnotationValue 1
#include "com/fasterxml/jackson/annotation/JacksonAnnotationValue.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class IOSClass;
@class IOSObjectArray;
@protocol ComFasterxmlJacksonAnnotationJsonIgnoreProperties;
@protocol JavaUtilSet;

/*!
 @brief Helper class used to contain information from a single <code>JsonIgnoreProperties</code>
  annotation, as well as to provide possible overrides from non-annotation sources.
 @since 2.8
 */
@interface ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value : NSObject < ComFasterxmlJacksonAnnotationJacksonAnnotationValue, JavaIoSerializable > {
 @public
  /*!
   @brief Names of properties to ignore.
   */
  id<JavaUtilSet> _ignored_;
  jboolean _ignoreUnknown_;
  jboolean _allowGetters_;
  jboolean _allowSetters_;
  jboolean _merge_;
}

#pragma mark Public

/*!
 @brief Factory method that may be used (although is NOT the recommended way)
  to construct an instance from a full set of properties.Most users would
  be better of starting by <code>empty()</code> instance and using `withXxx()`/`withoutXxx()`
  methods, as this factory method may need to be changed if new properties
  are added in <code>JsonIgnoreProperties</code> annotation.
 */
+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)constructWithJavaUtilSet:(id<JavaUtilSet>)ignored
                                                                          withBoolean:(jboolean)ignoreUnknown
                                                                          withBoolean:(jboolean)allowGetters
                                                                          withBoolean:(jboolean)allowSetters
                                                                          withBoolean:(jboolean)merge;

/*!
 @brief Accessor for default instances which has "empty" settings; that is:
 <ul>
  <li>No explicitly defined fields to ignore
   </li>
  <li>Does not ignore unknown fields
   </li>
  <li>Does not "allow" getters if property ignored (that is, ignorals apply to both setter and getter)
   </li>
  <li>Does not "allow" setters if property ignored (that is, ignorals apply to both setter and getter)
   </li>
  <li>Does use merge when combining overrides to base settings, such that `true` settings
    for any of the properties results in `true`, and names of fields are combined (union)  
 </li>
  </ul>
 */
+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)empty;

- (jboolean)isEqual:(id)o;

/*!
 @brief Method called to find names of properties to ignore when used for
  serialization: functionally
  same as <code>getIgnored</code> if <code>getAllowSetters()</code> is false
  (that is, there is "allowSetters=false" or equivalent),
  otherwise returns empty <code>java.util.Set</code>.
 */
- (id<JavaUtilSet>)findIgnoredForDeserialization;

/*!
 @brief Method called to find names of properties to ignore when used for
  serialization: functionally
  same as <code>getIgnored</code> if <code>getAllowGetters()</code> is false
  (that is, there is "allowGetters=false" or equivalent),
  otherwise returns empty <code>java.util.Set</code>.
 */
- (id<JavaUtilSet>)findIgnoredForSerialization;

+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)forIgnoredPropertiesWithJavaUtilSet:(id<JavaUtilSet>)propNames;

+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)forIgnoredPropertiesWithNSStringArray:(IOSObjectArray *)propNames;

+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)forIgnoreUnknownWithBoolean:(jboolean)state;

+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)fromWithComFasterxmlJacksonAnnotationJsonIgnoreProperties:(id<ComFasterxmlJacksonAnnotationJsonIgnoreProperties>)src;

- (jboolean)getAllowGetters;

- (jboolean)getAllowSetters;

- (id<JavaUtilSet>)getIgnored;

- (jboolean)getIgnoreUnknown;

- (jboolean)getMerge;

- (NSUInteger)hash;

/*!
 @brief Helper method that will try to combine values from two <code>Value</code>
  instances, using one as base settings, and the other as overrides
  to use instead of base values when defined; base values are only
  use if override does not specify a value (matching value is null
  or logically missing).
 Note that one or both of value instances may be `null`, directly;
  if both are `null`, result will also be `null`; otherwise never null.
 */
+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)mergeWithComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value:(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)base
                                                                  withComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value:(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)overrides;

/*!
 @since 2.8
 */
+ (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)mergeAllWithComFasterxmlJacksonAnnotationJsonIgnoreProperties_ValueArray:(IOSObjectArray *)values;

- (NSString *)description;

- (IOSClass *)valueFor;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withAllowGetters;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withAllowSetters;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withIgnoredWithJavaUtilSet:(id<JavaUtilSet>)ignored;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withIgnoredWithNSStringArray:(IOSObjectArray *)ignored;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withIgnoreUnknown;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withMerge;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withoutAllowGetters;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withoutAllowSetters;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withoutIgnored;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withoutIgnoreUnknown;

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withoutMerge;

/*!
 @brief Mutant factory method that merges values of this value with given override
  values, so that any explicitly defined inclusion in overrides has precedence over
  settings of this value instance.If no overrides exist will return <code>this</code>
  instance; otherwise new <code>Value</code> with changed inclusion values.
 */
- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)withOverridesWithComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value:(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)overrides;

#pragma mark Protected

- (instancetype __nonnull)initWithJavaUtilSet:(id<JavaUtilSet>)ignored
                                  withBoolean:(jboolean)ignoreUnknown
                                  withBoolean:(jboolean)allowGetters
                                  withBoolean:(jboolean)allowSetters
                                  withBoolean:(jboolean)merge;

- (id)readResolve;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value, _ignored_, id<JavaUtilSet>)

/*!
 @brief Default instance has no explicitly ignored fields, does not ignore unknowns,
  does not explicitly allow getters/setters (that is, ignorals apply to both),
  but does use merging for combining overrides with base settings
 */
inline ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_get_EMPTY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value, EMPTY, ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)

FOUNDATION_EXPORT void ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_initWithJavaUtilSet_withBoolean_withBoolean_withBoolean_withBoolean_(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *self, id<JavaUtilSet> ignored, jboolean ignoreUnknown, jboolean allowGetters, jboolean allowSetters, jboolean merge);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *new_ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_initWithJavaUtilSet_withBoolean_withBoolean_withBoolean_withBoolean_(id<JavaUtilSet> ignored, jboolean ignoreUnknown, jboolean allowGetters, jboolean allowSetters, jboolean merge) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *create_ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_initWithJavaUtilSet_withBoolean_withBoolean_withBoolean_withBoolean_(id<JavaUtilSet> ignored, jboolean ignoreUnknown, jboolean allowGetters, jboolean allowSetters, jboolean merge);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_fromWithComFasterxmlJacksonAnnotationJsonIgnoreProperties_(id<ComFasterxmlJacksonAnnotationJsonIgnoreProperties> src);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_constructWithJavaUtilSet_withBoolean_withBoolean_withBoolean_withBoolean_(id<JavaUtilSet> ignored, jboolean ignoreUnknown, jboolean allowGetters, jboolean allowSetters, jboolean merge);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_empty(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_mergeWithComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_withComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *base, ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *overrides);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_mergeAllWithComFasterxmlJacksonAnnotationJsonIgnoreProperties_ValueArray_(IOSObjectArray *values);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_forIgnoredPropertiesWithJavaUtilSet_(id<JavaUtilSet> propNames);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_forIgnoredPropertiesWithNSStringArray_(IOSObjectArray *propNames);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_forIgnoreUnknownWithBoolean_(jboolean state);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonIgnoreProperties")
