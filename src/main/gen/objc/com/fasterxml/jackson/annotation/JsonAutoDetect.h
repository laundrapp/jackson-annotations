//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-annotations/src/main/java/com/fasterxml/jackson/annotation/JsonAutoDetect.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonAutoDetect")
#ifdef RESTRICT_ComFasterxmlJacksonAnnotationJsonAutoDetect
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonAutoDetect 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonAutoDetect 1
#endif
#undef RESTRICT_ComFasterxmlJacksonAnnotationJsonAutoDetect

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonAutoDetect_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonAutoDetect || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonAutoDetect))
#define ComFasterxmlJacksonAnnotationJsonAutoDetect_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;
@class IOSClass;

/*!
 @brief Class annotation that can be used to define which kinds of Methods
  are to be detected by auto-detection, and with what minimum access level.
 Auto-detection means using name conventions
  and/or signature templates to find methods to use for data binding.
  For example, so-called "getters" can be auto-detected by looking for
  public member methods that return a value, do not take argument,
  and have prefix "get" in their name.
 <p>
  Default setting for all accessors is <code>Visibility.DEFAULT</code>, which 
  in turn means that the global defaults are used. Defaults
  are different for different accessor types (getters need to be public;
  setters can have any access modifier, for example).
  If you assign different <code>Visibility</code> type then it will override
  global defaults: for example, to require that all setters must be public,
  you would use:
 @code

      &#64;JsonAutoDetect(setterVisibility=Visibility.PUBLIC_ONLY)
 
@endcode
 */
@protocol ComFasterxmlJacksonAnnotationJsonAutoDetect < JavaLangAnnotationAnnotation >

@property (readonly) ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *getterVisibility;
@property (readonly) ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *isGetterVisibility;
@property (readonly) ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *setterVisibility;
@property (readonly) ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *creatorVisibility;
@property (readonly) ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *fieldVisibility;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonAnnotationJsonAutoDetect : NSObject < ComFasterxmlJacksonAnnotationJsonAutoDetect > {
 @public
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *getterVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *isGetterVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *setterVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *creatorVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *fieldVisibility_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonAutoDetect)

FOUNDATION_EXPORT id<ComFasterxmlJacksonAnnotationJsonAutoDetect> create_ComFasterxmlJacksonAnnotationJsonAutoDetect(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *creatorVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *fieldVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *getterVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *isGetterVisibility, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *setterVisibility);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonAutoDetect)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonAutoDetect || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility))
#define ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_

#define RESTRICT_JavaLangEnum 1
#define INCLUDE_JavaLangEnum 1
#include "java/lang/Enum.h"

@class IOSObjectArray;
@protocol JavaLangReflectMember;

typedef NS_ENUM(NSUInteger, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum) {
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_ANY = 0,
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_NON_PRIVATE = 1,
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_PROTECTED_AND_PUBLIC = 2,
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_PUBLIC_ONLY = 3,
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_NONE = 4,
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_Enum_DEFAULT = 5,
};

/*!
 @brief Enumeration for possible visibility thresholds (minimum visibility)
  that can be used to limit which methods (and fields) are
  auto-detected.
 */
@interface ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility : JavaLangEnum

#pragma mark Public

- (jboolean)isVisibleWithJavaLangReflectMember:(id<JavaLangReflectMember>)m;

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)valueOfWithNSString:(NSString *)name;

+ (IOSObjectArray *)values;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values_[];

/*!
 @brief Value that means that all kinds of access modifiers are acceptable,
  from private to public.
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_get_ANY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, ANY)

/*!
 @brief Value that means that any other access modifier other than 'private'
  is considered auto-detectable.
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_get_NON_PRIVATE(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NON_PRIVATE)

/*!
 @brief Value that means access modifiers 'protected' and 'public' are
  auto-detectable (and 'private' and "package access" == no modifiers
  are not)
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_get_PROTECTED_AND_PUBLIC(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, PROTECTED_AND_PUBLIC)

/*!
 @brief Value to indicate that only 'public' access modifier is considered
  auto-detectable.
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_get_PUBLIC_ONLY(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, PUBLIC_ONLY)

/*!
 @brief Value that indicates that no access modifiers are auto-detectable:
  this can be used to explicitly disable auto-detection for specified
  types.
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_get_NONE(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NONE)

/*!
 @brief Value that indicates that default visibility level (whatever it is,
  depends on context) is to be used.This usually means that inherited
  value (from parent visibility settings) is to be used.
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_get_DEFAULT(void);
J2OBJC_ENUM_CONSTANT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, DEFAULT)

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_values(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility)

#endif

#if !defined (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_) && (INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonAutoDetect || defined(INCLUDE_ComFasterxmlJacksonAnnotationJsonAutoDetect_Value))
#define ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_

#define RESTRICT_ComFasterxmlJacksonAnnotationJacksonAnnotationValue 1
#define INCLUDE_ComFasterxmlJacksonAnnotationJacksonAnnotationValue 1
#include "com/fasterxml/jackson/annotation/JacksonAnnotationValue.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility;
@class ComFasterxmlJacksonAnnotationPropertyAccessor;
@class IOSClass;
@protocol ComFasterxmlJacksonAnnotationJsonAutoDetect;

/*!
 @brief Helper class used to contain information from a single <code>JsonIgnoreProperties</code>
  annotation, as well as to provide possible overrides from non-annotation sources.
 @since 2.9
 */
@interface ComFasterxmlJacksonAnnotationJsonAutoDetect_Value : NSObject < ComFasterxmlJacksonAnnotationJacksonAnnotationValue, JavaIoSerializable > {
 @public
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *_fieldVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *_getterVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *_isGetterVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *_setterVisibility_;
  ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *_creatorVisibility_;
}

#pragma mark Public

/*!
 @brief Factory method for cnstructing instance with visibility of specified accessor
  (or, in case of <code>ALL</code>, all of them) set as specified; and the
  rest (if any) set as <code>Visibility.DEFAULT</code>).
 */
+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)constructWithComFasterxmlJacksonAnnotationPropertyAccessor:(ComFasterxmlJacksonAnnotationPropertyAccessor *)acc
                                                       withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)visibility;

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)constructWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)fields
                                                                withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)getters
                                                                withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)isGetters
                                                                withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)setters
                                                                withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)creators;

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)defaultVisibility;

- (jboolean)isEqual:(id)o;

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)fromWithComFasterxmlJacksonAnnotationJsonAutoDetect:(id<ComFasterxmlJacksonAnnotationJsonAutoDetect>)src;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)getCreatorVisibility;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)getFieldVisibility;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)getGetterVisibility;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)getIsGetterVisibility;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)getSetterVisibility;

- (NSUInteger)hash;

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)mergeWithComFasterxmlJacksonAnnotationJsonAutoDetect_Value:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)base
                                                            withComFasterxmlJacksonAnnotationJsonAutoDetect_Value:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)overrides;

+ (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)noOverrides;

- (NSString *)description;

- (IOSClass *)valueFor;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)withCreatorVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)v;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)withFieldVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)v;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)withGetterVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)v;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)withIsGetterVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)v;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)withOverridesWithComFasterxmlJacksonAnnotationJsonAutoDetect_Value:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)overrides;

- (ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)withSetterVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)v;

#pragma mark Protected

- (id)readResolve;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value, _fieldVisibility_, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value, _getterVisibility_, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value, _isGetterVisibility_, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value, _setterVisibility_, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value, _creatorVisibility_, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *)

/*!
 @brief Default instance with baseline visibility checking:
 <ul>
  <li>Only public fields visible</li>
  <li>Only public getters, is-getters visible</li>
  <li>All setters (regardless of access) visible</li>
  <li>Only public Creators visible</li>
 </ul>
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_get_DEFAULT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value, DEFAULT, ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)

/*!
 @brief Empty instance that specifies no overrides, that is, all visibility
  levels set as <code>Visibility.DEFAULT</code>.
 */
inline ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_get_NO_OVERRIDES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_NO_OVERRIDES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value, NO_OVERRIDES, ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *)

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_defaultVisibility(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_noOverrides(void);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_fromWithComFasterxmlJacksonAnnotationJsonAutoDetect_(id<ComFasterxmlJacksonAnnotationJsonAutoDetect> src);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_constructWithComFasterxmlJacksonAnnotationPropertyAccessor_withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_(ComFasterxmlJacksonAnnotationPropertyAccessor *acc, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *visibility);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_constructWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_withComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility_(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *fields, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *getters, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *isGetters, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *setters, ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility *creators);

FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *ComFasterxmlJacksonAnnotationJsonAutoDetect_Value_mergeWithComFasterxmlJacksonAnnotationJsonAutoDetect_Value_withComFasterxmlJacksonAnnotationJsonAutoDetect_Value_(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *base, ComFasterxmlJacksonAnnotationJsonAutoDetect_Value *overrides);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonAnnotationJsonAutoDetect_Value)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonAnnotationJsonAutoDetect")
